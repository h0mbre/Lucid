--- bochs/instrument/stubs/instrument.h	2024-06-22 17:01:14.506222144 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/instrument/stubs/instrument.h	2024-06-15 10:17:09.961773819 -0400
@@ -41,7 +41,7 @@
 void bx_instr_debug_cmd(const char *cmd);
 
 void bx_instr_cnear_branch_taken(unsigned cpu, bx_address branch_eip, bx_address new_eip);
-void bx_instr_cnear_branch_not_taken(unsigned cpu, bx_address branch_eip);
+void bx_instr_cnear_branch_not_taken(unsigned cpu, bx_address branch_eip, bx_address new_eip);
 void bx_instr_ucnear_branch(unsigned cpu, unsigned what, bx_address branch_eip, bx_address new_eip);
 void bx_instr_far_branch(unsigned cpu, unsigned what, Bit16u prev_cs, bx_address prev_eip, Bit16u new_cs, bx_address new_eip);
 
@@ -90,7 +90,7 @@
 
 /* branch resolution */
 #define BX_INSTR_CNEAR_BRANCH_TAKEN(cpu_id, branch_eip, new_eip) bx_instr_cnear_branch_taken(cpu_id, branch_eip, new_eip)
-#define BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(cpu_id, branch_eip) bx_instr_cnear_branch_not_taken(cpu_id, branch_eip)
+#define BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(cpu_id, branch_eip, new_eip) bx_instr_cnear_branch_not_taken(cpu_id, branch_eip, new_eip)
 #define BX_INSTR_UCNEAR_BRANCH(cpu_id, what, branch_eip, new_eip) bx_instr_ucnear_branch(cpu_id, what, branch_eip, new_eip)
 #define BX_INSTR_FAR_BRANCH(cpu_id, what, prev_cs, prev_eip, new_cs, new_eip) \
                        bx_instr_far_branch(cpu_id, what, prev_cs, prev_eip, new_cs, new_eip)
@@ -154,7 +154,7 @@
 
 /* branch resolution */
 #define BX_INSTR_CNEAR_BRANCH_TAKEN(cpu_id, branch_eip, new_eip)
-#define BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(cpu_id, branch_eip)
+#define BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(cpu_id, branch_eip, new_eip)
 #define BX_INSTR_UCNEAR_BRANCH(cpu_id, what, branch_eip, new_eip)
 #define BX_INSTR_FAR_BRANCH(cpu_id, what, prev_cs, prev_eip, new_cs, new_eip)
 
--- bochs/instrument/stubs/instrument.cc	2024-06-22 17:14:06.410743338 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/instrument/stubs/instrument.cc	2024-06-15 09:40:33.406782044 -0400
@@ -21,9 +21,12 @@
 
 
 #include "bochs.h"
+#include <stdint.h>
 
 #if BX_INSTRUMENTATION
 
+class bxInstruction_c;
+
 void bx_instr_init_env(void) {}
 void bx_instr_exit_env(void) {}
 
@@ -36,8 +39,43 @@
 void bx_instr_debug_promt() {}
 void bx_instr_debug_cmd(const char *cmd) {}
 
-void bx_instr_cnear_branch_taken(unsigned cpu, bx_address branch_eip, bx_address new_eip) {}
-void bx_instr_cnear_branch_not_taken(unsigned cpu, bx_address branch_eip) {}
+static inline uint32_t dbj2_hash(uint64_t src, uint64_t dst) {
+    if (!g_lucid_ctx)
+        return 0;
+
+    uint32_t hash = 5381;
+    hash = ((hash << 5) + hash) + (uint32_t)(src);
+    hash = ((hash << 5) + hash) + (uint32_t)(dst);
+    return hash & (g_lucid_ctx->coverage_map_size - 1);
+}
+
+static inline void update_coverage_map(uint64_t hash) {
+    // Get the address of the coverage map
+    if (!g_lucid_ctx)
+        return;
+
+    uint8_t *map_addr = g_lucid_ctx->coverage_map_addr;
+
+    // Mark this as hit
+    map_addr[hash]++;
+
+    // If it's been rolled-over to zero, make it one
+    if (map_addr[hash] == 0) {
+        map_addr[hash] = 1;
+    }
+}
+
+void bx_instr_cnear_branch_taken(unsigned cpu, bx_address branch_eip, bx_address new_eip) {
+    uint64_t hash = dbj2_hash(branch_eip, new_eip);
+    update_coverage_map(hash);
+    //printf("CNEAR TAKEN: (0x%lx, 0x%lx) Hash: 0x%lx\n", branch_eip, new_eip, hash);
+}
+void bx_instr_cnear_branch_not_taken(unsigned cpu, bx_address branch_eip, bx_address new_eip) {
+    uint64_t hash = dbj2_hash(branch_eip, new_eip);
+    update_coverage_map(hash);
+    //printf("CNEAR NOT TAKEN: (0x%lx, 0x%lx) Hash: 0x%lx\n", branch_eip, new_eip, hash);
+}
+
 void bx_instr_ucnear_branch(unsigned cpu, unsigned what, bx_address branch_eip, bx_address new_eip) {}
 void bx_instr_far_branch(unsigned cpu, unsigned what, Bit16u prev_cs, bx_address prev_eip, Bit16u new_cs, bx_address new_eip) {}
 
@@ -52,7 +90,9 @@
 void bx_instr_cache_cntrl(unsigned cpu, unsigned what) {}
 void bx_instr_prefetch_hint(unsigned cpu, unsigned what, unsigned seg, bx_address offset) {}
 
-void bx_instr_before_execution(unsigned cpu, bxInstruction_c *i) {}
+void bx_instr_before_execution(unsigned cpu, bxInstruction_c *i) {
+    //printf("About to execute %p\n", i);
+}
 void bx_instr_after_execution(unsigned cpu, bxInstruction_c *i) {}
 void bx_instr_repeat_iteration(unsigned cpu, bxInstruction_c *i) {}
 
--- bochs/gui/siminterface.cc	2024-06-22 17:19:57.574361662 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/gui/siminterface.cc	2024-05-15 14:19:19.245169022 -0400
@@ -1376,7 +1376,9 @@
                     if (*fpp != NULL) {
                       char *buffer = new char[4096];
                       while (!feof(fp2)) {
+                        //printf("READING 4096 bytes into buffer!\n");
                         size_t chars = fread(buffer, 1, 4096, fp2);
+                        //printf("WRITING to tmpfile!\n");
                         fwrite(buffer, 1, chars, *fpp);
                       }
                       delete [] buffer;
--- bochs/cpu/data_xfer16.cc	2024-06-22 17:01:14.454221517 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/cpu/data_xfer16.cc	2024-06-21 14:45:32.520934181 -0400
@@ -22,6 +22,7 @@
 #define NEED_CPU_REG_SHORTCUTS 1
 #include "bochs.h"
 #include "cpu.h"
+#include "gui/siminterface.h"
 #define LOG_THIS BX_CPU_THIS_PTR
 
 void BX_CPP_AttrRegparmN(1) BX_CPU_C::MOV_EwIwM(bxInstruction_c *i)
@@ -235,6 +236,45 @@
   BX_WRITE_16BIT_REG(i->src(), op1_16);
   BX_WRITE_16BIT_REG(i->dst(), op2_16);
 
+#if BX_SNAPSHOT
+  // Check for take snapshot instruction `xchg dx, dx`
+  if ((i->src() == i->dst()) && (i->src() == 2)) {
+    BX_COMMIT_INSTRUCTION(i);
+    if (BX_CPU_THIS_PTR async_event)
+      return;
+    ++i;
+    char save_dir[] = "/tmp/lucid_snapshot";
+    mkdir(save_dir, 0777);
+    printf("Saving Lucid snapshot to '%s'...\n", save_dir);
+    if (SIM->save_state(save_dir)) {
+      printf("Successfully saved snapshot\n");
+      sleep(2);
+      exit(0);
+    }
+    else {
+      printf("Failed to save snapshot\n");
+    }
+    BX_EXECUTE_INSTRUCTION(i);
+  }
+#endif
+
+#if BX_LUCID
+  // Check for special NOP
+  if (i->src() == i->dst()) {
+    // Check for crash
+    if (i->src() == 4 && g_lucid_ctx) {
+      g_lucid_ctx->crash = 1;
+      lucid_postfuzz_hook();
+    }
+
+    // Normal snapshot reset
+    if (i->src() == 3 && g_lucid_ctx) {
+      // Call into post-fuzz hook
+      lucid_postfuzz_hook();
+    }
+  }
+#endif
+
   BX_NEXT_INSTR(i);
 }
 
--- bochs/cpu/ctrl_xfer64.cc	2024-06-22 17:01:14.454221517 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/cpu/ctrl_xfer64.cc	2024-06-02 08:38:51.861018513 -0400
@@ -223,7 +223,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -235,7 +236,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -247,7 +249,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -259,7 +262,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -271,7 +275,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -283,7 +288,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -295,7 +301,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -307,7 +314,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -319,7 +327,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -331,7 +340,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -343,7 +353,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -355,7 +366,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -367,7 +379,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -379,7 +392,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -391,7 +405,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -403,7 +418,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -519,7 +535,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_TRACE(i);
 }
 
@@ -544,7 +561,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -559,7 +577,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -580,7 +599,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -595,7 +615,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -616,7 +637,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -631,7 +653,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
--- bochs/cpu/ctrl_xfer32.cc	2024-06-22 17:01:14.454221517 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/cpu/ctrl_xfer32.cc	2024-06-02 08:46:58.714472162 -0400
@@ -288,7 +288,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -301,7 +302,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -314,7 +316,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -327,7 +330,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -340,7 +344,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -353,7 +358,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -366,7 +372,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -379,7 +386,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -392,7 +400,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -405,7 +414,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -418,7 +428,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -431,7 +442,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -444,7 +456,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -457,7 +470,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -470,7 +484,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -483,7 +498,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -630,7 +646,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_TRACE(i);
 }
 
@@ -660,7 +677,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -677,7 +695,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -703,7 +722,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -720,7 +740,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -746,7 +767,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -763,7 +785,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
--- bochs/cpu/ctrl_xfer16.cc	2024-06-22 17:01:14.454221517 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/cpu/ctrl_xfer16.cc	2024-06-02 08:40:45.165995576 -0400
@@ -288,7 +288,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -301,7 +302,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -314,7 +316,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -327,7 +330,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -340,7 +344,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -353,7 +358,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -366,7 +372,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -379,7 +386,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -392,7 +400,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -405,7 +414,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -418,7 +428,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -431,7 +442,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -444,7 +456,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -457,7 +470,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -470,7 +484,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -483,7 +498,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_INSTR(i); // trace can continue over non-taken branch
 }
 
@@ -608,7 +624,8 @@
     BX_LINK_TRACE(i);
   }
 
-  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+  bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
   BX_NEXT_TRACE(i);
 }
 
@@ -638,7 +655,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -655,7 +673,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -681,7 +700,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -698,7 +718,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -724,7 +745,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
@@ -741,7 +763,8 @@
     }
 #if BX_INSTRUMENTATION
     else {
-      BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP);
+      bx_address taken = PREV_RIP + i->ilen();
+  BX_INSTR_CNEAR_BRANCH_NOT_TAKEN(BX_CPU_ID, PREV_RIP, taken);
     }
 #endif
 
--- bochs/cpu/cpu.cc	2024-06-22 17:01:14.430221229 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/cpu/cpu.cc	2024-06-21 10:40:37.975673657 -0400
@@ -63,6 +63,11 @@
   BX_CPU_THIS_PTR stop_reason = STOP_NO_REASON;
 #endif
 
+// Place the Lucid snapshot taking code here above potential long jump returns
+#if BX_LUCID
+  lucid_take_snapshot();
+#endif
+
   if (setjmp(BX_CPU_THIS_PTR jmp_buf_env)) {
     // can get here only from exception function or VMEXIT
     BX_CPU_THIS_PTR icount++;
--- bochs/bochs.h	2024-06-22 17:01:14.390220748 -0400
+++ /home/h0mbre/git_bochs/Bochs/bochs/bochs.h	2024-05-15 18:28:11.556120698 -0400
@@ -45,6 +45,11 @@
 #include <stdarg.h>
 #include <stdio.h>
 #include <stdlib.h>
+
+#if BX_LUCID
+#include <lucid.h>
+#endif
+
 #if defined(__sun__)
 #undef EAX
 #undef ECX
